# coding: utf8
import gluon.contenttype
import StringIO

from geraldo import Report, landscape, ReportBand, DetailBand, SystemField, Label, ObjectValue, ReportGroup
from geraldo.utils import cm, BAND_WIDTH, TA_CENTER, TA_RIGHT
from geraldo.generators import PDFGenerator
from reportlab.lib.pagesizes import A4

family = [
    {'name': 'Leticia', 'age': 29, 'weight': 55.7, 'genre': 'female', 'status': 'parent'},
    {'name': 'Marinho', 'age': 28, 'weight': 76, 'genre': 'male', 'status': 'parent'},
    {'name': 'Tarsila', 'age': 4, 'weight': 16.2, 'genre': 'female', 'status': 'child'},
    {'name': 'Linus', 'age': 0, 'weight': 1.5, 'genre': 'male', 'status': 'child'},
    {'name': 'Mychelle', 'age': 19, 'weight': 50, 'genre': 'female', 'status': 'nephew'},
    {'name': 'Mychell', 'age': 17, 'weight': 55, 'genre': 'male', 'status': 'niece'},
]

family.sort(lambda a,b: cmp(a['genre'], b['genre']) or cmp(a['status'], b['status']))

class MyFamilyReport(Report):
    title = 'My Family'

    class band_detail(DetailBand):
        height = 0.7*cm
        elements = [
            ObjectValue(expression='name', left=0.5*cm),
            ObjectValue(expression='age', left=5*cm),
            ObjectValue(expression='weight', left=6.5*cm),
        ]
        borders = {'bottom': True}

    class band_page_header(ReportBand):
        height = 1.3*cm
        elements = [
            SystemField(expression='%(report_title)s', top=0.1*cm, left=0, width=BAND_WIDTH,
                style={'fontName': 'Helvetica-Bold', 'fontSize': 14, 'alignment': TA_CENTER}),
            SystemField(expression=u'Page %(page_number)d of %(page_count)d', top=0.1*cm,
                width=BAND_WIDTH, style={'alignment': TA_RIGHT}),
            Label(text="Name", top=0.8*cm, left=0.5*cm),
            Label(text="Age", top=0.8*cm, left=5*cm),
            Label(text="Weight", top=0.8*cm, left=6.5*cm),
        ]
        borders = {'all': True}

    class band_page_footer(ReportBand):
        height = 0.5*cm
        elements = [
            Label(text='Geraldo Reports', top=0.1*cm),
            SystemField(expression='Printed in %(now:%Y, %b %d)s at %(now:%H:%M)s', top=0.1*cm,
                width=BAND_WIDTH, style={'alignment': TA_RIGHT}),
            ]
        borders = {'top': True}

    class band_summary(ReportBand):
        height = 0.5*cm
        elements = [
            Label(text='Totals:'),
            ObjectValue(expression='avg(age)', left=5*cm, style={'fontName': 'Helvetica-Bold'}),
            ObjectValue(expression='sum(weight)', left=6.5*cm, style={'fontName': 'Helvetica-Bold'}),
            ]
        borders = {'top': True}

    groups = [
        ReportGroup(
            attribute_name='genre',
            band_header=DetailBand(
                height=0.6*cm,
                elements=[
                    ObjectValue(expression='genre', style={'fontSize': 12})
                ]
            ),
            band_footer=ReportBand(
                height = 0.5*cm,
                elements = [
                    ObjectValue(expression='avg(age)', left=5*cm),
                    ObjectValue(expression='sum(weight)', left=6.5*cm),
                    ],
                borders = {'top': True},
            ),
        ),
        ReportGroup(
            attribute_name='status',
            band_header=DetailBand(
                height=0.6*cm,
                elements=[
                    ObjectValue(expression='status', style={'fontSize': 11}, left=0.2*cm)
                ]
            )
        ),
    ]

def simple():            
    resp = StringIO.StringIO()         
    my_report = MyFamilyReport(queryset=family)
    my_report.generate_by(PDFGenerator, filename=resp)            
    resp.seek(0)
    filename = "%s_Family.pdf" % (request.env.server_name)
    response.headers['Content-Type']='application/pdf'    
    response.headers['Content-disposition'] = "attachment; filename=\"%s\"" % filename
    return resp.read()

def warnings():
    idgrupoalumno = 102
    resp = StringIO.StringIO()
    avisos = db((db.amonestacion.id_grupo_alumno == idgrupoalumno) &
                (db.amonestacion.id_grupo_alumno == db.grupo_alumno.id) &
                (db.grupo_alumno.id_alumno == db.alumno.id) &
                (db.grupo_alumno.id_curso_academico_grupo == db.curso_academico_grupo.id) &
                (db.curso_academico_grupo.id == session.curso_academico_id) &
                (db.amonestacion.id_departamento_profesor == db.departamento_profesor.id) &
                (db.departamento_profesor.id_profesor == db.profesor.id)).select(db.amonestacion.ALL, db.alumno.ALL, db.profesor.ALL ,orderby=~db.amonestacion.fecha)
                 
    my_report = ReportWarnings(queryset=avisos)
    my_report.generate_by(PDFGenerator, filename=resp)            
    resp.seek(0)
    filename = "%s_Warnings.pdf" % (request.env.server_name)
    response.headers['Content-Type']='application/pdf'    
    response.headers['Content-disposition'] = "attachment; filename=\"%s\"" % filename
    return resp.read()

    
class ReportWarnings(Report):
    title = 'Warnings'

    class band_detail(DetailBand):
        height = 0.7*cm
        elements = [
            ObjectValue(expression='avisos.amonestacion.id', left=0.5*cm),
            ObjectValue(expression='avisos.amonestacion.fecha', left=5*cm),
            ObjectValue(expression='avisos.alumno.apellidos', left=6.5*cm),
        ]
        borders = {'bottom': True}

    class band_page_header(ReportBand):
        height = 1.3*cm
        elements = [
            SystemField(expression='%(report_title)s', top=0.1*cm, left=0, width=BAND_WIDTH,
                style={'fontName': 'Helvetica-Bold', 'fontSize': 14, 'alignment': TA_CENTER}),
            SystemField(expression=u'Page %(page_number)d of %(page_count)d', top=0.1*cm,
                width=BAND_WIDTH, style={'alignment': TA_RIGHT}),
            Label(text="Id", top=0.8*cm, left=0.5*cm),
            Label(text="Fecha", top=0.8*cm, left=5*cm),
            Label(text="Alumno", top=0.8*cm, left=6.5*cm),
        ]
        borders = {'all': True}
